
package demo.ws.soap_spring_cxf_wss4j;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "GreetingServiceImplService", targetNamespace = "http://soap_spring_cxf_wss4j.ws.demo/", wsdlLocation = "http://localhost:8080/ws/wss4j/soap/greeting?wsdl")
public class GreetingServiceImplService
    extends Service
{

    private final static URL GREETINGSERVICEIMPLSERVICE_WSDL_LOCATION;
    private final static WebServiceException GREETINGSERVICEIMPLSERVICE_EXCEPTION;
    private final static QName GREETINGSERVICEIMPLSERVICE_QNAME = new QName("http://soap_spring_cxf_wss4j.ws.demo/", "GreetingServiceImplService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost:8080/ws/wss4j/soap/greeting?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        GREETINGSERVICEIMPLSERVICE_WSDL_LOCATION = url;
        GREETINGSERVICEIMPLSERVICE_EXCEPTION = e;
    }

    public GreetingServiceImplService() {
        super(__getWsdlLocation(), GREETINGSERVICEIMPLSERVICE_QNAME);
    }

    public GreetingServiceImplService(WebServiceFeature... features) {
        super(__getWsdlLocation(), GREETINGSERVICEIMPLSERVICE_QNAME, features);
    }

    public GreetingServiceImplService(URL wsdlLocation) {
        super(wsdlLocation, GREETINGSERVICEIMPLSERVICE_QNAME);
    }

    public GreetingServiceImplService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, GREETINGSERVICEIMPLSERVICE_QNAME, features);
    }

    public GreetingServiceImplService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public GreetingServiceImplService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns GreetingService
     */
    @WebEndpoint(name = "GreetingServiceImplPort")
    public GreetingService getGreetingServiceImplPort() {
        return super.getPort(new QName("http://soap_spring_cxf_wss4j.ws.demo/", "GreetingServiceImplPort"), GreetingService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns GreetingService
     */
    @WebEndpoint(name = "GreetingServiceImplPort")
    public GreetingService getGreetingServiceImplPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://soap_spring_cxf_wss4j.ws.demo/", "GreetingServiceImplPort"), GreetingService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (GREETINGSERVICEIMPLSERVICE_EXCEPTION!= null) {
            throw GREETINGSERVICEIMPLSERVICE_EXCEPTION;
        }
        return GREETINGSERVICEIMPLSERVICE_WSDL_LOCATION;
    }

}
